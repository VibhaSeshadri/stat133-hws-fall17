# Function which calculates percentage of applicants rejected in DEPT
calReject <- function (df, dept) {
reject <- (df$Freq[df$Admit == 'Rejected' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
reject/total
}
# Creating data frame of percentages of males accepted and rejected by Dept
males <- cal %>% filter(Gender == 'Male')
mP <- males %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(males, Dept), Rejected = calReject(males, Dept))
# Creating data frame of percentages of females accepted and rejected by Dept
females <- cal %>% filter(Gender == 'Female')
fP <- females %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(females, Dept), Rejected = calReject(females, Dept))
# Percentages of males accepted and rejected by dept
mP
# Percentages of females accepted and rejected by dept
fP
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
ggplot(joined, aes(x = Deptartment, y = Accepted, fill = Gender)) + geom_bar(position="dodge", stat = "Identity")
ggplot(joined, aes(x = Deptartment, y = Accepted, fill = Gender)) + geom_bar(position="dodge", stat = "Identity")
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
ggplot(joined, aes(x = Deptartment, y = Accepted, fill = Gender)) + geom_bar(position="dodge", stat = "Identity")
joined
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
ggplot(joined, aes(x = Deptartment, y = Accepted, fill = Gender)) + geom_bar(position="dodge", stat = "Identity")
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) + geom_bar(position="dodge", stat = "Identity")
# Function which calculates percentage of applicants accepted in DEPT
calAdmit <- function (df, dept) {
accept <- (df$Freq[df$Admit == 'Admitted' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
accept/total
}
# Function which calculates percentage of applicants rejected in DEPT
calReject <- function (df, dept) {
reject <- (df$Freq[df$Admit == 'Rejected' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
reject/total
}
# Creating data frame of percentages of males accepted and rejected by Dept
males <- cal %>% filter(Gender == 'Male')
mP <- males %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(males, Dept), Rejected = calReject(males, Dept))
# Creating data frame of percentages of females accepted and rejected by Dept
females <- cal %>% filter(Gender == 'Female')
fP <- females %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(females, Dept), Rejected = calReject(females, Dept))
# Percentages of males accepted and rejected by dept
mP
# Percentages of females accepted and rejected by dept
fP
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) + geom_bar(position="dodge", stat = "Identity")
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
# contents of 'joined'
joined
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender))
+ geom_bar(position="dodge", stat = "Identity")
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
# contents of 'joined'
joined
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) +
geom_bar(position="dodge", stat = "Identity") +
ggtitle("Comparison of Graduate Student Acceptance to UCB Department") +
geom_label(x = "Department", y = "Proportion Accepted")
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
# contents of 'joined'
joined
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) +
geom_bar(position="dodge", stat = "Identity") +
ggtitle("Comparison of Graduate Student Acceptance to UCB Department") +
ylab("Proportion Accepted")
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
include_graphics("../images/sql.png")
include_graphics("../images/dplyr.png")
# Save the data in a R object
cal <- UCBAdmissions;
# Check if the data is in a dataframe, if it isn't then make it one
if (!class(cal) == "data.frame") {
cal <- as.data.frame.table(cal, stringsAsFactors = FALSE)
}
# Explore the structure of the data
str(cal)
# Dimensions of the data
nrow(cal)
ncol(cal)
# Column and row names of data set
colnames(cal)
rownames(cal)
# First few elements of the data
head(cal, n = 5);
# Summary statistics of the data
summary(cal)
# Total Male Accepted
male <- cal %>% filter(Gender == "Male") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# Total Female Accepted
female <- cal %>% filter(Gender == "Female") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# How many more men than women were accepted?
male - female
# Function which calculates percentage of applicants accepted in DEPT
calAdmit <- function (df, dept) {
accept <- (df$Freq[df$Admit == 'Admitted' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
accept/total
}
# Function which calculates percentage of applicants rejected in DEPT
calReject <- function (df, dept) {
reject <- (df$Freq[df$Admit == 'Rejected' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
reject/total
}
# Creating data frame of percentages of males accepted and rejected by Dept
males <- cal %>% filter(Gender == 'Male')
mP <- males %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(males, Dept),
Rejected = calReject(males, Dept))
# Creating data frame of percentages of females accepted and rejected by Dept
females <- cal %>% filter(Gender == 'Female')
fP <- females %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(females, Dept),
Rejected = calReject(females, Dept))
# Percentages of males accepted and rejected by dept
mP
# Percentages of females accepted and rejected by dept
fP
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
# contents of 'joined'
joined
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) +
geom_bar(position="dodge", stat = "Identity") +
ggtitle("Comparison of Graduate Student Acceptance to UCB Departments, 1973") +
ylab("Proportion Accepted")
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) +
geom_bar(position="dodge", stat = "Identity") +
ggtitle("Comparison of Graduate Student Acceptance to UCB Departments, 1973") +
ylab("Proportion Accepted")
getwd()
setwd("Documents/berkeleyUG/fall2017/stat133/stat133-hws-fall17/post01")
getwd()
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
include_graphics("../images/sql.png")
include_graphics("../images/dplyr.png")
# Save the data in a R object
cal <- UCBAdmissions;
# Check if the data is in a dataframe, if it isn't then make it one
if (!class(cal) == "data.frame") {
cal <- as.data.frame.table(cal, stringsAsFactors = FALSE)
}
# Explore the structure of the data
str(cal)
# Dimensions of the data
nrow(cal)
ncol(cal)
# Column and row names of data set
colnames(cal)
rownames(cal)
# First few elements of the data
head(cal, n = 5);
# Summary statistics of the data
summary(cal)
# Total Male Accepted
male <- cal %>% filter(Gender == "Male") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# Total Female Accepted
female <- cal %>% filter(Gender == "Female") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# How many more men than women were accepted?
male - female
# Function which calculates percentage of applicants accepted in DEPT
calAdmit <- function (df, dept) {
accept <- (df$Freq[df$Admit == 'Admitted' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
accept/total
}
# Function which calculates percentage of applicants rejected in DEPT
calReject <- function (df, dept) {
reject <- (df$Freq[df$Admit == 'Rejected' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
reject/total
}
# Creating data frame of percentages of males accepted and rejected by Dept
males <- cal %>% filter(Gender == 'Male')
mP <- males %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(males, Dept),
Rejected = calReject(males, Dept))
# Creating data frame of percentages of females accepted and rejected by Dept
females <- cal %>% filter(Gender == 'Female')
fP <- females %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(females, Dept),
Rejected = calReject(females, Dept))
# Percentages of males accepted and rejected by dept
mP
# Percentages of females accepted and rejected by dept
fP
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
# contents of 'joined'
joined
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
include_graphics("../images/sql.png")
include_graphics("../images/dplyr.png")
# Save the data in a R object
cal <- UCBAdmissions;
# Check if the data is in a dataframe, if it isn't then make it one
if (!class(cal) == "data.frame") {
cal <- as.data.frame.table(cal, stringsAsFactors = FALSE)
}
# Explore the structure of the data
str(cal)
# Dimensions of the data
nrow(cal)
ncol(cal)
# Column and row names of data set
colnames(cal)
rownames(cal)
# First few elements of the data
head(cal, n = 5);
# Summary statistics of the data
summary(cal)
# Total Male Accepted
male <- cal %>% filter(Gender == "Male") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# Total Female Accepted
female <- cal %>% filter(Gender == "Female") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# How many more men than women were accepted?
male - female
# Function which calculates percentage of applicants accepted in DEPT
calAdmit <- function (df, dept) {
accept <- (df$Freq[df$Admit == 'Admitted' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
accept/total
}
# Function which calculates percentage of applicants rejected in DEPT
calReject <- function (df, dept) {
reject <- (df$Freq[df$Admit == 'Rejected' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
reject/total
}
# Creating data frame of percentages of males accepted and rejected by Dept
males <- cal %>% filter(Gender == 'Male')
mP <- males %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(males, Dept),
Rejected = calReject(males, Dept))
# Creating data frame of percentages of females accepted and rejected by Dept
females <- cal %>% filter(Gender == 'Female')
fP <- females %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(females, Dept),
Rejected = calReject(females, Dept))
# Percentages of males accepted and rejected by dept
mP
# Percentages of females accepted and rejected by dept
fP
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
# contents of 'joined'
joined
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) +
geom_bar(position="dodge", stat = "Identity") +
ggtitle("Comparison of Graduate Student Acceptance to UCB Departments, 1973") +
ylab("Proportion Accepted")
# Load knitr so we can render the images at the top nicely using include_graphics
library(knitr)
# Load the data sets library for our examples later in the post
library(datasets)
# Load dyplr so we can manipulate the data in the dataset
library(dplyr)
# Load ggplot so we can plot results of data analysis
library(ggplot2)
include_graphics("../images/sql.png")
include_graphics("../images/dplyr.png")
# Save the data in a R object
cal <- UCBAdmissions;
# Check if the data is in a dataframe, if it isn't then make it one
if (!class(cal) == "data.frame") {
cal <- as.data.frame.table(cal, stringsAsFactors = FALSE)
}
# Explore the structure of the data
str(cal)
# Dimensions of the data
nrow(cal)
ncol(cal)
# Column and row names of data set
colnames(cal)
rownames(cal)
# First few elements of the data
head(cal, n = 5);
# Summary statistics of the data
summary(cal)
# Total Male Accepted
male <- cal %>% filter(Gender == "Male") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# Total Female Accepted
female <- cal %>% filter(Gender == "Female") %>%
filter(Admit == "Admitted") %>%
select(Freq) %>%
summarise(sum(Freq))
# How many more men than women were accepted?
male - female
# Function which calculates percentage of applicants accepted in DEPT
calAdmit <- function (df, dept) {
accept <- (df$Freq[df$Admit == 'Admitted' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
accept/total
}
# Function which calculates percentage of applicants rejected in DEPT
calReject <- function (df, dept) {
reject <- (df$Freq[df$Admit == 'Rejected' & df$Dept == dept])
total <- sum(df$Freq[df$Dept == dept])
reject/total
}
# Creating data frame of percentages of males accepted and rejected by Dept
males <- cal %>% filter(Gender == 'Male')
mP <- males %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(males, Dept),
Rejected = calReject(males, Dept))
# Creating data frame of percentages of females accepted and rejected by Dept
females <- cal %>% filter(Gender == 'Female')
fP <- females %>% group_by(Dept) %>%
summarise(Accepted = calAdmit(females, Dept),
Rejected = calReject(females, Dept))
# Percentages of males accepted and rejected by dept
mP
# Percentages of females accepted and rejected by dept
fP
### Joining the tables that hold the percentages of males and females accepted
### and rejected into different departments
df.list <- list(a=mP, b=fP)
accept <- stack(lapply(df.list, `[[`, "Accepted"))
dept <- stack(lapply(df.list, `[[`, "Dept"))
joined <- data.frame(Department = as.character(dept$values),
Accepted = as.numeric(accept$values),
Gender = as.character(dept$ind),
stringsAsFactors = FALSE)
joined$Gender[joined$Gender == 'a'] <- "Male"
joined$Gender[joined$Gender == 'b'] <- "Female"
# contents of 'joined'
joined
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) +
geom_bar(position="dodge", stat = "Identity") +
ggtitle("Comparison of Graduate Student Acceptance to UCB Departments, 1973") +
ylab("Proportion Accepted")
# Plotting the data in the joined table
ggplot(joined, aes(x = Department, y = Accepted, fill = Gender)) +
geom_bar(position="dodge", stat = "Identity") +
ggtitle("Comparison of Graduate Student Acceptance to UCB Departments, 1973") +
ylab("Proportion Accepted")
